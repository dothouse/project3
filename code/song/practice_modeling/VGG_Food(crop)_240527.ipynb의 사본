{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"machine_shape":"hm","gpuType":"T4","authorship_tag":"ABX9TyPI+E12uLVVpYvZ52poc9QB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"00CXOoqaJqpZ","executionInfo":{"status":"ok","timestamp":1716795853256,"user_tz":-540,"elapsed":2540,"user":{"displayName":"김제이","userId":"00315081185818459041"}},"outputId":"70d80b97-a593-4ef6-de3d-3c25b793dcb9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","import tensorflow as tf\n","from tensorflow.keras import datasets, layers, models\n","\n","import matplotlib.pyplot as plt\n","\n","from skimage.transform import resize\n","from skimage.io import imread\n","\n","\n","from tqdm import tqdm\n","import pickle\n","\n","# 병렬연산\n","from concurrent.futures import ThreadPoolExecutor\n","\n","import os\n","import warnings\n","warnings.filterwarnings(action='ignore')\n","\n","import cv2\n","from google.colab.patches import cv2_imshow\n","\n","from sklearn.model_selection import train_test_split"],"metadata":{"id":"1RCNvw3nKS3P"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["### 사용자 정의 함수\n","%cd /content/drive/MyDrive/project3\n","\n","# Add the paths to the modules to the Python path\n","import sys\n","sys.path.append(os.path.abspath('./code/image_function'))\n","\n","from image_load import resize_image, load_image, load_and_resize_images\n","from vram_reset import reset_vram"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4NV6jmV8mJyq","executionInfo":{"status":"ok","timestamp":1716795863465,"user_tz":-540,"elapsed":581,"user":{"displayName":"김제이","userId":"00315081185818459041"}},"outputId":"c1da2e7c-5f6f-4927-f052-12b36e02b0a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/.shortcut-targets-by-id/1gdU-KuXDUU7v2o8X7TdV0JgGiz603mCc/project3\n"]}]},{"cell_type":"code","source":["def load_image(datadir,img_new_size, pic_new_cnt) :\n","\n","  food_middle_list = sorted(os.listdir(datadir)) # 중분류\n","  food_list = [] # 음식이름\n","  food_path_list = [] # 음식이름 경로\n","\n","  for food_middle in food_middle_list:\n","    middle_path = os.path.join(datadir,food_middle)\n","    food_name_list = os.listdir(middle_path)\n","\n","    for food in food_name_list:\n","        path = os.path.join(middle_path,food)\n","        food_path_list.append(path)\n","\n","        name = path.split('/')[-1]\n","        food_list.append(name)\n","\n","  image_li, target_li, except_li = load_and_resize_images(food_path_list, food_list, img_size = img_new_size, pic_cnt = pic_new_cnt)\n","\n","  return image_li, target_li, except_li\n","\n","image_li, target_li, except_li = load_image('/content/drive/MyDrive/project3/data/traindata/selected_image_color',(224,224),100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hp2DVAPCrx54","executionInfo":{"status":"ok","timestamp":1716795867939,"user_tz":-540,"elapsed":1759,"user":{"displayName":"김제이","userId":"00315081185818459041"}},"outputId":"d2a3d41e-b36f-4c29-f1d1-4cefba10ddf8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["Processing images: 100%|██████████| 2/2 [00:01<00:00,  1.70it/s]\n"]}]},{"cell_type":"code","source":["def preprocessing_image(image_list, target_list):\n","\n","  # 카테고리랑 숫자로 바꾼 값 dict형태로 만들기\n","  categories_label = {category:i for i, category in enumerate(np.unique(target_list))}\n","  # target값을 숫자로 변형\n","  target_num = np.array([categories_label[category] for category in target_list], dtype=np.int8)\n","\n","  X_train, X_test, y_train, y_test = train_test_split(image_list, target_num, test_size=0.2, random_state=42 )\n","\n","  # 정규화\n","  X_train = X_train / 255.0\n","  X_test = X_test / 255.0\n","\n","  return X_train, X_test, y_train, y_test\n","\n","X_train, X_test, y_train, y_test = preprocessing_image(image_li, target_li)"],"metadata":{"id":"EPIDUFDVvGvu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def VGG16(input_shape):\n","# VGG16 모델\n","  model = tf.keras.models.Sequential([\n","    tf.keras.layers.Conv2D(64,(3,3),strides=(1, 1),activation='relu',padding='same', input_shape=input_shape),\n","    tf.keras.layers.Conv2D(filters=64, kernel_size=(3,3), padding=\"same\", activation=\"relu\"),\n","    tf.keras.layers.MaxPooling2D(pool_size=(2,2)),\n","\n","    tf.keras.layers.Conv2D(128,(3,3),strides=(1, 1) ,padding='same',activation='relu'),\n","    tf.keras.layers.Conv2D(128,(3,3),strides=(1, 1) ,padding='same',activation='relu'),\n","    tf.keras.layers.MaxPooling2D(pool_size=(2,2)),\n","\n","    tf.keras.layers.Conv2D(256,(3,3),strides=(1, 1),padding='same', activation='relu'),\n","    tf.keras.layers.Conv2D(256,(3,3),strides=(1, 1),padding='same', activation='relu'),\n","    tf.keras.layers.MaxPooling2D(pool_size=(2,2)),\n","\n","    tf.keras.layers.Conv2D(512,(3,3),strides=(1, 1),padding='same', activation='relu'),\n","    tf.keras.layers.Conv2D(512,(3,3),strides=(1, 1),padding='same', activation='relu'),\n","    tf.keras.layers.MaxPooling2D(pool_size=(2,2)),\n","\n","\n","    tf.keras.layers.Flatten(),\n","\n","    tf.keras.layers.Dense(4096, activation='relu'),\n","    tf.keras.layers.Dense(4096, activation='relu'),\n","    tf.keras.layers.Dense(2, activation='softmax')\n","  ])\n","\n","  model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n","\n","  return model"],"metadata":{"id":"mAFmaFddwme1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = VGG16(input_shape = (224,224,3))\n","history = model.fit(X_train,y_train,epochs = 100,validation_split = 0.2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FYg47rzFR_j4","executionInfo":{"status":"ok","timestamp":1716798903240,"user_tz":-540,"elapsed":189060,"user":{"displayName":"김제이","userId":"00315081185818459041"}},"outputId":"4ee792fe-4c3e-4a87-f5c2-8f5e734ab13f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","4/4 [==============================] - 25s 539ms/step - loss: 2.8823 - accuracy: 0.4922 - val_loss: 0.6830 - val_accuracy: 0.5625\n","Epoch 2/100\n","4/4 [==============================] - 2s 444ms/step - loss: 0.6980 - accuracy: 0.4766 - val_loss: 0.6938 - val_accuracy: 0.4375\n","Epoch 3/100\n","4/4 [==============================] - 2s 440ms/step - loss: 0.6960 - accuracy: 0.4297 - val_loss: 0.6936 - val_accuracy: 0.4375\n","Epoch 4/100\n","4/4 [==============================] - 2s 439ms/step - loss: 0.6932 - accuracy: 0.4922 - val_loss: 0.6928 - val_accuracy: 0.4688\n","Epoch 5/100\n","4/4 [==============================] - 2s 439ms/step - loss: 0.6894 - accuracy: 0.5703 - val_loss: 0.6619 - val_accuracy: 0.6250\n","Epoch 6/100\n","4/4 [==============================] - 2s 437ms/step - loss: 0.8072 - accuracy: 0.6172 - val_loss: 0.7018 - val_accuracy: 0.4375\n","Epoch 7/100\n","4/4 [==============================] - 2s 433ms/step - loss: 0.6938 - accuracy: 0.5078 - val_loss: 0.7056 - val_accuracy: 0.4375\n","Epoch 8/100\n","4/4 [==============================] - 2s 435ms/step - loss: 0.7275 - accuracy: 0.5391 - val_loss: 0.6600 - val_accuracy: 0.5625\n","Epoch 9/100\n","4/4 [==============================] - 2s 429ms/step - loss: 0.7031 - accuracy: 0.4297 - val_loss: 0.7061 - val_accuracy: 0.4375\n","Epoch 10/100\n","4/4 [==============================] - 2s 426ms/step - loss: 0.6943 - accuracy: 0.5078 - val_loss: 0.7014 - val_accuracy: 0.4375\n","Epoch 11/100\n","4/4 [==============================] - 2s 430ms/step - loss: 0.6996 - accuracy: 0.5469 - val_loss: 0.6867 - val_accuracy: 0.7188\n","Epoch 12/100\n","4/4 [==============================] - 2s 430ms/step - loss: 0.6844 - accuracy: 0.6484 - val_loss: 0.6637 - val_accuracy: 0.5625\n","Epoch 13/100\n","4/4 [==============================] - 2s 429ms/step - loss: 0.6959 - accuracy: 0.5547 - val_loss: 0.6949 - val_accuracy: 0.4375\n","Epoch 14/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6929 - accuracy: 0.5078 - val_loss: 0.6963 - val_accuracy: 0.4375\n","Epoch 15/100\n","4/4 [==============================] - 2s 425ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6979 - val_accuracy: 0.4375\n","Epoch 16/100\n","4/4 [==============================] - 2s 424ms/step - loss: 0.6936 - accuracy: 0.5078 - val_loss: 0.6985 - val_accuracy: 0.4375\n","Epoch 17/100\n","4/4 [==============================] - 2s 425ms/step - loss: 0.6934 - accuracy: 0.5078 - val_loss: 0.6971 - val_accuracy: 0.4375\n","Epoch 18/100\n","4/4 [==============================] - 2s 423ms/step - loss: 0.6934 - accuracy: 0.5078 - val_loss: 0.6974 - val_accuracy: 0.4375\n","Epoch 19/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6939 - accuracy: 0.5078 - val_loss: 0.6954 - val_accuracy: 0.4375\n","Epoch 20/100\n","4/4 [==============================] - 2s 418ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6959 - val_accuracy: 0.4375\n","Epoch 21/100\n","4/4 [==============================] - 2s 420ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6957 - val_accuracy: 0.4375\n","Epoch 22/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6935 - accuracy: 0.5078 - val_loss: 0.6960 - val_accuracy: 0.4375\n","Epoch 23/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6930 - accuracy: 0.5078 - val_loss: 0.6952 - val_accuracy: 0.4375\n","Epoch 24/100\n","4/4 [==============================] - 2s 424ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6952 - val_accuracy: 0.4375\n","Epoch 25/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6948 - val_accuracy: 0.4375\n","Epoch 26/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6949 - val_accuracy: 0.4375\n","Epoch 27/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6947 - val_accuracy: 0.4375\n","Epoch 28/100\n","4/4 [==============================] - 2s 417ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6944 - val_accuracy: 0.4375\n","Epoch 29/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6942 - val_accuracy: 0.4375\n","Epoch 30/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6945 - val_accuracy: 0.4375\n","Epoch 31/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6934 - accuracy: 0.5078 - val_loss: 0.6946 - val_accuracy: 0.4375\n","Epoch 32/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6942 - val_accuracy: 0.4375\n","Epoch 33/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6949 - val_accuracy: 0.4375\n","Epoch 34/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6952 - val_accuracy: 0.4375\n","Epoch 35/100\n","4/4 [==============================] - 2s 420ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6951 - val_accuracy: 0.4375\n","Epoch 36/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6934 - accuracy: 0.5078 - val_loss: 0.6962 - val_accuracy: 0.4375\n","Epoch 37/100\n","4/4 [==============================] - 2s 418ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6954 - val_accuracy: 0.4375\n","Epoch 38/100\n","4/4 [==============================] - 2s 420ms/step - loss: 0.6935 - accuracy: 0.5078 - val_loss: 0.6966 - val_accuracy: 0.4375\n","Epoch 39/100\n","4/4 [==============================] - 2s 420ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6960 - val_accuracy: 0.4375\n","Epoch 40/100\n","4/4 [==============================] - 2s 424ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6952 - val_accuracy: 0.4375\n","Epoch 41/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6948 - val_accuracy: 0.4375\n","Epoch 42/100\n","4/4 [==============================] - 2s 418ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6951 - val_accuracy: 0.4375\n","Epoch 43/100\n","4/4 [==============================] - 2s 420ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6958 - val_accuracy: 0.4375\n","Epoch 44/100\n","4/4 [==============================] - 2s 423ms/step - loss: 0.6935 - accuracy: 0.5078 - val_loss: 0.6961 - val_accuracy: 0.4375\n","Epoch 45/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6962 - val_accuracy: 0.4375\n","Epoch 46/100\n","4/4 [==============================] - 2s 424ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6958 - val_accuracy: 0.4375\n","Epoch 47/100\n","4/4 [==============================] - 2s 424ms/step - loss: 0.6930 - accuracy: 0.5078 - val_loss: 0.6952 - val_accuracy: 0.4375\n","Epoch 48/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6939 - accuracy: 0.5078 - val_loss: 0.6937 - val_accuracy: 0.4375\n","Epoch 49/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6943 - val_accuracy: 0.4375\n","Epoch 50/100\n","4/4 [==============================] - 2s 423ms/step - loss: 0.6938 - accuracy: 0.5078 - val_loss: 0.6935 - val_accuracy: 0.4375\n","Epoch 51/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6945 - val_accuracy: 0.4375\n","Epoch 52/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6934 - accuracy: 0.5078 - val_loss: 0.6944 - val_accuracy: 0.4375\n","Epoch 53/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6953 - val_accuracy: 0.4375\n","Epoch 54/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6959 - val_accuracy: 0.4375\n","Epoch 55/100\n","4/4 [==============================] - 2s 425ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6961 - val_accuracy: 0.4375\n","Epoch 56/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6941 - accuracy: 0.5078 - val_loss: 0.6947 - val_accuracy: 0.4375\n","Epoch 57/100\n","4/4 [==============================] - 2s 425ms/step - loss: 0.6937 - accuracy: 0.5078 - val_loss: 0.6961 - val_accuracy: 0.4375\n","Epoch 58/100\n","4/4 [==============================] - 2s 423ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6957 - val_accuracy: 0.4375\n","Epoch 59/100\n","4/4 [==============================] - 2s 426ms/step - loss: 0.6934 - accuracy: 0.5078 - val_loss: 0.6964 - val_accuracy: 0.4375\n","Epoch 60/100\n","4/4 [==============================] - 2s 424ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6965 - val_accuracy: 0.4375\n","Epoch 61/100\n","4/4 [==============================] - 2s 425ms/step - loss: 0.6934 - accuracy: 0.5078 - val_loss: 0.6956 - val_accuracy: 0.4375\n","Epoch 62/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6954 - val_accuracy: 0.4375\n","Epoch 63/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6947 - val_accuracy: 0.4375\n","Epoch 64/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6930 - accuracy: 0.5078 - val_loss: 0.6946 - val_accuracy: 0.4375\n","Epoch 65/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6935 - accuracy: 0.5078 - val_loss: 0.6952 - val_accuracy: 0.4375\n","Epoch 66/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6949 - val_accuracy: 0.4375\n","Epoch 67/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6947 - val_accuracy: 0.4375\n","Epoch 68/100\n","4/4 [==============================] - 2s 426ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6946 - val_accuracy: 0.4375\n","Epoch 69/100\n","4/4 [==============================] - 2s 423ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6950 - val_accuracy: 0.4375\n","Epoch 70/100\n","4/4 [==============================] - 2s 420ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6948 - val_accuracy: 0.4375\n","Epoch 71/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6935 - accuracy: 0.5078 - val_loss: 0.6943 - val_accuracy: 0.4375\n","Epoch 72/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6930 - accuracy: 0.5078 - val_loss: 0.6946 - val_accuracy: 0.4375\n","Epoch 73/100\n","4/4 [==============================] - 2s 427ms/step - loss: 0.6934 - accuracy: 0.5078 - val_loss: 0.6958 - val_accuracy: 0.4375\n","Epoch 74/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6965 - val_accuracy: 0.4375\n","Epoch 75/100\n","4/4 [==============================] - 2s 424ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6964 - val_accuracy: 0.4375\n","Epoch 76/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6956 - val_accuracy: 0.4375\n","Epoch 77/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6930 - accuracy: 0.5078 - val_loss: 0.6955 - val_accuracy: 0.4375\n","Epoch 78/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6956 - val_accuracy: 0.4375\n","Epoch 79/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6949 - val_accuracy: 0.4375\n","Epoch 80/100\n","4/4 [==============================] - 2s 423ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6946 - val_accuracy: 0.4375\n","Epoch 81/100\n","4/4 [==============================] - 2s 421ms/step - loss: 0.6934 - accuracy: 0.5078 - val_loss: 0.6953 - val_accuracy: 0.4375\n","Epoch 82/100\n","4/4 [==============================] - 2s 424ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6953 - val_accuracy: 0.4375\n","Epoch 83/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6933 - accuracy: 0.5078 - val_loss: 0.6945 - val_accuracy: 0.4375\n","Epoch 84/100\n","4/4 [==============================] - 2s 424ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6948 - val_accuracy: 0.4375\n","Epoch 85/100\n","4/4 [==============================] - 2s 418ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6949 - val_accuracy: 0.4375\n","Epoch 86/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6952 - val_accuracy: 0.4375\n","Epoch 87/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6949 - val_accuracy: 0.4375\n","Epoch 88/100\n","4/4 [==============================] - 2s 420ms/step - loss: 0.6935 - accuracy: 0.5078 - val_loss: 0.6959 - val_accuracy: 0.4375\n","Epoch 89/100\n","4/4 [==============================] - 2s 423ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6956 - val_accuracy: 0.4375\n","Epoch 90/100\n","4/4 [==============================] - 2s 423ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6959 - val_accuracy: 0.4375\n","Epoch 91/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6958 - val_accuracy: 0.4375\n","Epoch 92/100\n","4/4 [==============================] - 2s 420ms/step - loss: 0.6939 - accuracy: 0.5078 - val_loss: 0.6967 - val_accuracy: 0.4375\n","Epoch 93/100\n","4/4 [==============================] - 2s 424ms/step - loss: 0.6930 - accuracy: 0.5078 - val_loss: 0.6959 - val_accuracy: 0.4375\n","Epoch 94/100\n","4/4 [==============================] - 2s 423ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6951 - val_accuracy: 0.4375\n","Epoch 95/100\n","4/4 [==============================] - 2s 423ms/step - loss: 0.6934 - accuracy: 0.5078 - val_loss: 0.6945 - val_accuracy: 0.4375\n","Epoch 96/100\n","4/4 [==============================] - 2s 422ms/step - loss: 0.6936 - accuracy: 0.5078 - val_loss: 0.6936 - val_accuracy: 0.4375\n","Epoch 97/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6939 - val_accuracy: 0.4375\n","Epoch 98/100\n","4/4 [==============================] - 2s 423ms/step - loss: 0.6932 - accuracy: 0.5078 - val_loss: 0.6945 - val_accuracy: 0.4375\n","Epoch 99/100\n","4/4 [==============================] - 2s 420ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6944 - val_accuracy: 0.4375\n","Epoch 100/100\n","4/4 [==============================] - 2s 419ms/step - loss: 0.6931 - accuracy: 0.5078 - val_loss: 0.6945 - val_accuracy: 0.4375\n"]}]},{"cell_type":"code","source":["# model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TU0kiHyGTjMh","executionInfo":{"status":"ok","timestamp":1716536500227,"user_tz":-540,"elapsed":456,"user":{"displayName":"김제이","userId":"00315081185818459041"}},"outputId":"a176beff-f96a-436b-8d52-be99913660cf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d (Conv2D)             (None, 224, 224, 32)      896       \n","                                                                 \n"," max_pooling2d (MaxPooling2  (None, 112, 112, 32)      0         \n"," D)                                                              \n","                                                                 \n"," conv2d_1 (Conv2D)           (None, 112, 112, 64)      18496     \n","                                                                 \n"," max_pooling2d_1 (MaxPoolin  (None, 56, 56, 64)        0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_2 (Conv2D)           (None, 56, 56, 128)       73856     \n","                                                                 \n"," max_pooling2d_2 (MaxPoolin  (None, 28, 28, 128)       0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_3 (Conv2D)           (None, 28, 28, 256)       295168    \n","                                                                 \n"," max_pooling2d_3 (MaxPoolin  (None, 14, 14, 256)       0         \n"," g2D)                                                            \n","                                                                 \n"," flatten (Flatten)           (None, 50176)             0         \n","                                                                 \n"," dense (Dense)               (None, 128)               6422656   \n","                                                                 \n"," dense_1 (Dense)             (None, 64)                8256      \n","                                                                 \n"," dense_2 (Dense)             (None, 13)                845       \n","                                                                 \n","=================================================================\n","Total params: 6820173 (26.02 MB)\n","Trainable params: 6820173 (26.02 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["def plot_accuracy_loss(history):\n","    \"\"\"\n","        Plot the accuracy and the loss during the training of the nn.\n","    \"\"\"\n","    fig = plt.figure(figsize=(10,5))\n","\n","    # Plot accuracy\n","    plt.subplot(221)\n","    plt.plot(history.history['accuracy'],'bo--', label = \"acc\")\n","    plt.plot(history.history['val_accuracy'], 'ro--', label = \"val_acc\")\n","    plt.title(\"train_acc vs val_acc\")\n","    plt.ylabel(\"accuracy\")\n","    plt.xlabel(\"epochs\")\n","    plt.legend()\n","\n","    # Plot loss function\n","    plt.subplot(222)\n","    plt.plot(history.history['loss'],'bo--', label = \"loss\")\n","    plt.plot(history.history['val_loss'], 'ro--', label = \"val_loss\")\n","    plt.title(\"train_loss vs val_loss\")\n","    plt.ylabel(\"loss\")\n","    plt.xlabel(\"epochs\")\n","\n","    plt.legend()\n","    plt.show()\n","\n","plot_accuracy_loss(history)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":277},"id":"_X3z8S_KSLzA","executionInfo":{"status":"ok","timestamp":1716799963091,"user_tz":-540,"elapsed":614,"user":{"displayName":"김제이","userId":"00315081185818459041"}},"outputId":"8e3eda7d-3114-4fac-f5e7-a2a73ee3706f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","predictions = model.predict(X_test)\n","\n","  # Convert the logits to probabilities\n","probabilities = tf.nn.softmax(predictions)\n","\n","  # Get the class with the highest probability\n","predicted_classes = np.argmax(probabilities, axis=1)\n","\n","  # Compare the predicted classes with the actual classes\n","comparison = list(zip(predicted_classes, y_test))\n","\n","  # Display the first 10 predictions and actual values\n","for i in range(10):\n","    print(f'Predicted: {predicted_classes[i]}, Actual: {y_test[i]}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wNNYtC5MTDOo","executionInfo":{"status":"ok","timestamp":1716799974687,"user_tz":-540,"elapsed":3034,"user":{"displayName":"김제이","userId":"00315081185818459041"}},"outputId":"313dba0c-b187-4a94-857d-b4da77acf3ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2/2 [==============================] - 2s 2s/step\n","Predicted: 1, Actual: 0\n","Predicted: 1, Actual: 1\n","Predicted: 1, Actual: 0\n","Predicted: 1, Actual: 1\n","Predicted: 1, Actual: 1\n","Predicted: 1, Actual: 0\n","Predicted: 1, Actual: 0\n","Predicted: 1, Actual: 0\n","Predicted: 1, Actual: 0\n","Predicted: 1, Actual: 0\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"aGr-dLYbTGsX"},"execution_count":null,"outputs":[]}]}